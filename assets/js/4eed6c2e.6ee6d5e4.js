(globalThis.webpackChunkgeocortex_dev_center=globalThis.webpackChunkgeocortex_dev_center||[]).push([[7183],{3905:(e,n,t)=>{"use strict";t.d(n,{Zo:()=>p,kt:()=>u});var s=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,s,o=function(e,n){if(null==e)return{};var t,s,o={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=s.createContext({}),l=function(e){var n=s.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return s.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),m=l(t),u=o,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||a;return t?s.createElement(h,i(i({ref:n},p),{},{components:t})):s.createElement(h,i({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var r={};for(var c in n)hasOwnProperty.call(n,c)&&(r[c]=n[c]);r.originalType=e,r.mdxType="string"==typeof e?e:o,i[1]=r;for(var l=2;l<a;l++)i[l]=t[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5084:(e,n,t)=>{"use strict";t.r(n),t.d(n,{frontMatter:()=>a,contentTitle:()=>i,metadata:()=>r,toc:()=>c,default:()=>p});var s=t(2122),o=(t(7294),t(3905));const a={title:"Events Reference",description:"VertiGIS Studio Web - Events Reference"},i=void 0,r={unversionedId:"web/sdk-events-reference",id:"web/sdk-events-reference",isDocsHomePage:!1,title:"Events Reference",description:"VertiGIS Studio Web - Events Reference",source:"@site/docs/web/sdk-events-reference.mdx",sourceDirName:"web",slug:"/web/sdk-events-reference",permalink:"/docs/web/sdk-events-reference",editUrl:"https://github.com/geocortex/dev-center/edit/master/docs/web/sdk-events-reference.mdx",version:"current",frontMatter:{title:"Events Reference",description:"VertiGIS Studio Web - Events Reference"},sidebar:"web",previous:{title:"Overview",permalink:"/docs/web/sdk-events-overview"},next:{title:"Commands and Operations",permalink:"/docs/web/sdk-commands-operations"}},c=[{value:"Publishing Events",id:"publishing-events",children:[{value:"Services",id:"services",children:[]},{value:"Component Models",id:"component-models",children:[]},{value:"Components",id:"components",children:[]}]},{value:"Subscribing to Events",id:"subscribing-to-events",children:[{value:"Services",id:"services-1",children:[]},{value:"Component Models",id:"component-models-1",children:[]},{value:"Components",id:"components-1",children:[]}]},{value:"Creating Custom Events",id:"creating-custom-events",children:[{value:"Event Arguments",id:"event-arguments",children:[]}]}],l={toc:c};function p({components:e,...n}){return(0,o.kt)("wrapper",(0,s.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Events can be published, subscribed, or created by an custom service, component model, or component."),(0,o.kt)("h2",{id:"publishing-events"},"Publishing Events"),(0,o.kt)("p",null,"Events can be published by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},".publish")," method on the event object."),(0,o.kt)("h3",{id:"services"},"Services"),(0,o.kt)("p",null,"Events are accessed in services through the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default class CustomService extends ServiceBase {\n    customIdentify() {\n        // ... run a custom identify here.\n        this.messages.events.tasks.identified.publish(someFeatures);\n    }\n}\n")),(0,o.kt)("h3",{id:"component-models"},"Component Models"),(0,o.kt)("p",null,"Events are accessed in component models through the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default class ExampleComponentModel extends ComponentModelBase {\n    customIdentify() {\n        // ... run a custom identify here.\n        this.messages.events.tasks.identified.publish(someFeatures);\n    }\n}\n")),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("p",null,"Events in components are accessed through the ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/sdk-components-ui-context#accessing-the-uicontext"},"UIContext"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export default function ExampleComponent(\n    props: LayoutElementProperties<ExampleComponentModel>\n) {\n    const { events } = useContext(UIContext);\n\n    const customIdentify = () => {\n        // ... run a custom identify here.\n        this.messages.events.tasks.identified.publish(someFeatures);\n    };\n\n    return (\n        <LayoutElement {...props}>\n            <p>Hello World</p>\n        </LayoutElement>\n    );\n}\n")),(0,o.kt)("h2",{id:"subscribing-to-events"},"Subscribing to Events"),(0,o.kt)("p",null,"Events can be subscribed to by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},".subscribe")," method on the event object."),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"It is vital that the event handles are cleaned up when the object is cleaned up, otherwise dangling references can occur."))),(0,o.kt)("h3",{id:"services-1"},"Services"),(0,o.kt)("p",null,"Events are accessed in services through the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default class CustomService extends ServiceBase {\n    handles: IHandle[] = [];\n\n    protected async _onInitialize(): Promise<void> {\n        await super._onInitialize();\n        this.handles.push(\n            this.messages.events.ui.activated.subscribe(\n                (id: string) => {\n                    console.log(`Component '${id}' activated.`);\n                }\n            )\n        );\n    }\n\n    protected async _onDestroy(): Promise<void> {\n        await super._onDestroy();\n        this.handles.forEach((handle) => handle.remove());\n    }\n}\n")),(0,o.kt)("h3",{id:"component-models-1"},"Component Models"),(0,o.kt)("p",null,"Events are accessed in component models through the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default class ExampleComponentModel extends ComponentModelBase {\n    handles: IHandle[] = [];\n\n    protected async _onInitialize(): Promise<void> {\n        await super._onInitialize();\n        this.handles.push(\n            this.messages.events.ui.activated.subscribe(\n                (id: string) => {\n                    console.log(`Component '${id}' activated.`);\n                }\n            )\n        );\n    }\n\n    protected async _onDestroy(): Promise<void> {\n        await super._onDestroy();\n        this.handles.forEach((handle) => handle.remove());\n    }\n}\n")),(0,o.kt)("h3",{id:"components-1"},"Components"),(0,o.kt)("p",null,"Events in components are accessed through the ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/sdk-components-ui-context#accessing-the-uicontext"},"UIContext"),"."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you need to subscribe to events in a component, it's best practice to use the ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/sdk-components-hooks"},"component hooks")," instead of a ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect"),", as the component hooks will automatically clean up the event handle."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export default function ExampleComponent(\n    props: LayoutElementProperties<ExampleComponentModel>\n) {\n    const { events } = useContext(UIContext);\n\n    useSubscribe(events.ui.activated, (id: string) => {\n        console.log(`Component '${id}' activated.`);\n    });\n\n    return (\n        <LayoutElement {...props}>\n            <p>Hello World</p>\n        </LayoutElement>\n    );\n}\n")),(0,o.kt)("h2",{id:"creating-custom-events"},"Creating Custom Events"),(0,o.kt)("p",null,"Creating custom events is as simple as referencing the custom event by name and publishing or subscribing to it. This is because the logic of creating an event is abstracted away; if an event is referenced in a publish or subscribe call that doesn't exist yet, it will be automatically created."),(0,o.kt)("p",null,"When the service calls the ",(0,o.kt)("inlineCode",{parentName:"p"},'this.messages.events("my.custom-event")'),", this creates the event if it has not already been created. It can then be immediately subscribed to. Likewise, if the event has not been created, it will be when ",(0,o.kt)("inlineCode",{parentName:"p"},'this.messages.event<string>("my-custom-event").publish(...)')," is called."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export default class CustomService extends ServiceBase {\n    handles: IHandle[] = [];\n\n    publishCustomEvent() {\n        // highlight-next-line\n        this.messages\n            .event<string>("my-custom-event")\n            .publish("some argument");\n    }\n\n    protected async _onInitialize(): Promise<void> {\n        await super._onInitialize();\n        this.handles.push(\n            // highlight-next-line\n            this.messages\n                .event<string>("my-custom-event")\n                .subscribe((someArg: string) => {\n                    console.log(\n                        `Event published with arg: \'${someArg}\'`\n                    );\n                })\n        );\n    }\n\n    protected async _onDestroy(): Promise<void> {\n        await super._onDestroy();\n        this.handles.forEach((handle) => handle.remove());\n    }\n}\n')),(0,o.kt)("h3",{id:"event-arguments"},"Event Arguments"),(0,o.kt)("p",null,"Events optionally take a type argument, which represents the object associated with the event consumed by the subscriber. This can be a simple or complex object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'this.messages\n    .event<string>("my-custom-event")\n    .publish("Some String Arg")\n\nthis.messages\n    .event<string>("my-custom-event")\n    .subscribe((someArg: string) => { ... })\n\nthis.messages\n    .event<CustomType>("another-custom-event")\n    .publish(new CustomType("param"))\n\n')))}p.isMDXComponent=!0}}]);